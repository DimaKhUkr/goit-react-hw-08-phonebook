{"version":3,"file":"static/js/718.f5a11418.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/AddContact/AddContact.jsx","pages/Contacts.js"],"sourcesContent":["// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filters);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label>\n        Filter by name <br />\n        <input\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={filter}\n          onChange={e => dispatch(getFilter(e.currentTarget.value))}\n        />\n      </label>\n    </>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onFilter: PropTypes.func.isRequired,\n// };\n","import styled from '@emotion/styled';\n\nexport const Box = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const Btn = styled.button`\n  height: 40px;\n  color: #fff;\n  border-radius: 5px;\n  padding: 10px 25px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  background: rgb(6, 14, 131);\n  background: linear-gradient(\n    0deg,\n    rgba(6, 14, 131, 1) 0%,\n    rgba(12, 25, 180, 1) 100%\n  );\n  border: none;\n\n  &:hover {\n    background: rgb(0, 3, 255);\n    background: linear-gradient(\n      0deg,\n      rgba(0, 3, 255, 1) 0%,\n      rgba(2, 126, 251, 1) 100%\n    );\n  }\n`;\nexport const ListBox = styled.ul`\n  width: 800px;\n`;\n","// import PropTypes from 'prop-types';\nimport { fetchDelContacts } from 'redux/option';\nimport { Box, Btn, ListBox } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nexport const ContactsList = () => {\n  const { items: contacts } = useSelector(state => state.contacts);\n  const filter = useSelector(state => state.filters);\n  const dispatch = useDispatch();\n  const lowCaseFilter = filter.toLowerCase();\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(lowCaseFilter)\n  );\n  return (\n    <ListBox>\n      {visibleContacts.map(({ id, name, phone: number }) => {\n        return (\n          <Box key={id}>\n            <p>{name}:</p>\n            <p>{number}</p>\n            <Btn onClick={() => dispatch(fetchDelContacts(id))} type=\"button\">\n              Прощай контакт насовсем\n            </Btn>\n          </Box>\n        );\n      })}\n    </ListBox>\n  );\n};\n\n// ContactsList.propTypes = {\n//   onClickDelBtn: PropTypes.func.isRequired,\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.objectOf(PropTypes.string.isRequired).isRequired\n//   ).isRequired,\n// };\n","import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAdContacts } from 'redux/option';\n\nexport function AddContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dataState = {\n    name,\n    number,\n  };\n  const { items: contacts } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  // console.log(contacts);\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(dataState);\n    reset();\n  };\n\n  const onSubmit = ({ name, number }) => {\n    const newContact = {\n      name,\n      phone: number,\n    };\n\n    contacts.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    )\n      ? alert('Этот чувак уже есть в книге бро')\n      : dispatch(fetchAdContacts(newContact));\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} name=\"AddContact\">\n      <label>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n}\n\n// AddContact.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { addContacts } from '../Fetch/addContacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { AddContact } from 'components/AddContact/AddContact';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    dispatch(addContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n\n      <div>\n        <h1>Phonebook</h1>\n        <AddContact />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && <b>Loading tasks...</b>}\n        {error && <b>{error}</b>}\n\n        {items.length > 0 ? (\n          <ContactsList />\n        ) : (\n          <h3>You are absolutely alone</h3>\n        )}\n      </div>\n    </>\n  );\n}\n"],"names":["Filter","filter","useSelector","state","filters","dispatch","useDispatch","type","placeholder","value","onChange","e","getFilter","currentTarget","Box","styled","Btn","ListBox","ContactsList","contacts","items","lowCaseFilter","toLowerCase","visibleContacts","contact","name","includes","map","id","number","phone","onClick","fetchDelContacts","AddContact","useState","setName","setNumber","dataState","handleChange","target","onSubmit","newContact","find","alert","fetchAdContacts","reset","preventDefault","pattern","title","required","Tasks","isLoading","error","useEffect","addContacts","Helmet","length"],"sourceRoot":""}